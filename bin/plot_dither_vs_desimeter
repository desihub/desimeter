#!/usr/bin/env python

import os,sys
import fitsio
import astropy.io.fits as pyfits
from astropy.table import Table
import matplotlib.pyplot as plt
import numpy as np

from desimeter.transform.radec2tan import hadec2xy
from desimeter.simplecorr import SimpleCorr

import argparse



parser = argparse.ArgumentParser(description='Compare desimeter & dither fiber positions')
parser.add_argument('dither_file', type=str, help='dither file name')
parser.add_argument('fvc_file', type=str, help='desi_fvc_proc file name')
parser.add_argument('fiberassign_file', type=str, help='fiberassign file name')
#parser.add_argument('coordinates_file', type=str, help='coordinates file name (for positioning flags)')
parser.add_argument('-e', '--expid', type=int, default=None, help='expid to use from dither file')
args = parser.parse_args()

def myquiver(x1,y1,x2,y2) :
    darcsec=0.5
    x0=-1.5 ; y0=1.7
    x1b=np.append(x1,x0)
    y1b=np.append(y1,y0)
    x2b=np.append(x2,x0+darcsec/3600.)
    y2b=np.append(y2,y0)

    dx=(x2b-x1b)
    dy=(y2b-y1b)
    plt.quiver(x1b,y1b,dx,dy)
    dr=np.sqrt(dx[:-1]**2+dy[:-1]**2)
    rms2d=np.sqrt(np.mean(dr**2))
    plt.text(-1.3,y0,"{:2.1f}''".format(darcsec),fontsize=10,horizontalalignment="left",verticalalignment="center")
    plt.text(1.6,y0,"rms$_{2D}$ = %3.2f''"%(rms2d*3600.),fontsize=10,horizontalalignment="right",verticalalignment="center")


quiver_units="width"
quiver_scale=15.
def arrow() :
    xarrow=-0.025
    dxarrow=1.#arcsec
    plt.quiver(xarrow,-0.025,dxarrow,0.,color="black",units=quiver_units,scale=quiver_scale)
    plt.text(xarrow,-0.029,"{} arcsec".format(dxarrow))

def text(blabla) :
    props = dict(boxstyle='round', facecolor='white', alpha=0.5)
    plt.text(0.029,-0.029,blabla,fontsize=8, bbox=props,verticalalignment='bottom', horizontalalignment='right')


dither_file = args.dither_file
fvc_file = args.fvc_file
fiberassign_file = args.fiberassign_file
#coordinates_file = args.coordinates_file

# Eddie's dithers
#######################################################################
t=fitsio.read(dither_file)
print(t.dtype.names)
if args.expid is None:
    i=0
else:
    ind = np.flatnonzero(t['expid'][0, :] == args.expid)
    if len(ind) > 0:
        i = ind[0]
    else:
        raise ValueError(f'could not find expid {args.expid} in dither file.')

err=np.sqrt(t['dxfiboff'][:,i]**2+t['dyfiboff'][:,i]**2)
roff=np.sqrt(t['xfiboff'][:,i]**2+t['yfiboff'][:,i]**2)
jj=np.where((err<0.5)&(roff<4.))[0]

dither_ra    = t['fiber_ditherfit_ra'][jj,i]
dither_dec   = t['fiber_ditherfit_dec'][jj,i]
dither_fiber = t['fiber'][jj,i].astype(int)
print("number of valid targets from dither analysis={}".format(len(dither_ra)))

# desimeter RA Dec
#######################################################################
fvc=Table.read(fvc_file)
ii=(fvc["RA"]!=0)
fvc=fvc[ii]

# fiberassign
#######################################################################
fiberassign=Table.read(fiberassign_file)
head = fitsio.read_header(fiberassign_file)
dico = { loc : i for i,loc in enumerate(fiberassign["LOCATION"])}

fvc_indices=[]
fiberassign_indices=[]
for i,loc in enumerate(fvc["LOCATION"]) :
    if loc in dico :
        fvc_indices.append(i)
        fiberassign_indices.append(dico[loc])

fvc=fvc[fvc_indices]
fiberassign=fiberassign[fiberassign_indices]

# re-address the dither results to map desimeter table which has location
#######################################################################
dico = { fiber : i for i,fiber in enumerate(dither_fiber) }

fvc_indices=[]
dither_indices=[]
for i,fiber in enumerate(fiberassign["FIBER"]):
    if fiber in dico :
        fvc_indices.append(i)
        dither_indices.append(dico[fiber])

fvc=fvc[fvc_indices]
fiberassign=fiberassign[fvc_indices]
dither_ra=dither_ra[dither_indices]
dither_dec=dither_dec[dither_indices]


"""
    # coord file
    #######################################################################
    coord=Table.read(coordinates_file)
    print(coord.dtype.names)
    cloc=1000*np.array(coord['PETAL_LOC'])+np.array(coord["DEVICE_LOC"])
    dico = { loc : i for i,loc in enumerate(cloc)}

    #fvc_indices=[]
    coord_indices=[]
    for i,loc in enumerate(fvc["LOCATION"]) :
        if loc in dico :
            #fvc_indices.append(i)
            coord_indices.append(dico[loc])
        else :
            print("error")
            sys.exit(12)
    coord=coord[coord_indices]
"""

tel_ra=head["REQRA"]
tel_dec=head["REQDEC"]
desimeter_x,desimeter_y=hadec2xy(-fvc["RA"]+tel_ra,fvc["DEC"],0,tel_dec)
target_x,target_y=hadec2xy(-fiberassign["TARGET_RA"]+tel_ra,fiberassign["TARGET_DEC"],0,tel_dec)
dither_x,dither_y=hadec2xy(-dither_ra+tel_ra,dither_dec,0,tel_dec)
# from radian to degree
scale=180/np.pi
desimeter_x *= scale
desimeter_y *= scale
target_x *= scale
target_y *= scale
dither_x *= scale
dither_y *= scale

plt.subplot(221,title="desimeter(guide+fvc)-target")
myquiver(target_x,target_y,desimeter_x,desimeter_y)

plt.subplot(222,title="dither-target")
myquiver(target_x,target_y,dither_x,dither_y)

plt.subplot(223,title="desimeter(guide+fvc)-dither")
myquiver(dither_x,dither_y,desimeter_x,desimeter_y)

plt.show()
