#!/usr/bin/env python


import numpy as np
import matplotlib.pyplot as plt
from desimeter.io import load_metrology
import argparse

parser = argparse.ArgumentParser(description=__doc__)

parser.add_argument('--device-ids', type= str, required=False, default=None, help="comma separated list of positioner or fiducial ids to highlight")

args = parser.parse_args()

spots    = load_metrology()

print(spots.dtype.names)
print(np.unique(spots["DEVICE_TYPE"]))

plt.figure(figsize=(6,6))

if args.device_ids is not None :
    selection=(spots['DEVICE_TYPE']=="POS")|(spots['DEVICE_TYPE']=="FIF")|(spots['DEVICE_TYPE']=="GIF")
    plt.plot(spots["X_FP"][selection],spots["Y_FP"][selection],".",alpha=0.5,color="gray",label=None)
    for did in args.device_ids.split(",") :
        selection=(spots['DEVICE_ID']==did)
        plt.plot(spots["X_FP"][selection],spots["Y_FP"][selection],"o",label=did)

else :
    for petal in np.unique(spots['PETAL_LOC']) :
        selection=(spots['PETAL_LOC']==petal)&(spots['DEVICE_TYPE']=="POS")
        petalid = spots['PETAL_ID'][selection][0]
        plt.plot(spots["X_FP"][selection],spots["Y_FP"][selection],".",alpha=0.5,label="PETAL LOC={} ID={}".format(petal,petalid))

    for what in np.unique(spots['DEVICE_TYPE']) :
        if what=="POS": continue
        selection=(spots['DEVICE_TYPE']==what)
        plt.plot(spots["X_FP"][selection],spots["Y_FP"][selection],".",label=what)

first=True
for petal in np.unique(spots['PETAL_LOC']) :
    selection=(spots['DEVICE_TYPE']=="GFA")&(spots['PETAL_LOC']==petal)
    if np.sum(selection)>0 :
        x=np.array(spots["X_FP"][selection])
        y=np.array(spots["Y_FP"][selection])
        x=np.append(x,[x[0]])
        y=np.append(y,[y[0]])
        if first :
            label = "GFA CCD"
            first = False
        else :
            label = None
        if args.device_ids is not None : label = None
        plt.plot(x,y,"-",label=label,color="k")
plt.legend()
plt.show()
