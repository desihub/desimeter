# Workflow is based on the Astropy GitHub actions workflow, ci_workflows.yml
name: CI

on:
    push:
        branches:
            - '*'
        tags:
            - '*'
    pull_request:

jobs:
    tests:
        name: Unit tests
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: true
            matrix:
                os: [ubuntu-latest]
                python-version: ['3.9', '3.10', '3.11']  # Py 3.10.14 as of 2025-04
                astropy-version: ['==6.0', '<6.1']  # KPNO+NERSC, 2025/04
                fitsio-version: ['==1.2.1', '<2']   # KPNO+NERSC, 2025/04
                numpy-version: ['<1.23']  # to keep asscalar, used by astropy
        env:
            DESIUTIL_VERSION: 3.5.0

        steps:
            - name: Checkout code
              uses: actions/checkout@v2
              with:
                fetch-depth: 0
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Python dependencies
              run: |
                python -m pip install --upgrade pip setuptools wheel
                python -m pip install pytest
                python -m pip install git+https://github.com/desihub/desiutil.git@${DESIUTIL_VERSION}#egg=desiutil
                python -m pip install -r requirements.txt
                python -m pip install -U 'numpy${{ matrix.numpy-version }}'
                python -m pip install -U 'astropy${{ matrix.astropy-version }}'
                python -m pip cache remove fitsio
                python -m pip install --no-deps --force-reinstall --ignore-installed 'fitsio${{ matrix.fitsio-version }}'
            - name: Run the test
              run: pytest

    coverage:
        name: Test coverage
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: true
            matrix:
                os: [ubuntu-latest]
                python-version: ['3.10'] # KPNO+NERSC as of 2025-04
                astropy-version: ['<7']  # latest
                fitsio-version: ['<2']  # latest
                numpy-version: ['<1.23']  # to keep asscalar, used by astropy
        env:
            DESIUTIL_VERSION: 3.5.0

        steps:
            - name: Checkout code
              uses: actions/checkout@v2
              with:
                fetch-depth: 0
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Python dependencies
              run: |
                python -m pip install --upgrade pip setuptools wheel
                python -m pip install pytest pytest-cov coveralls
                python -m pip install git+https://github.com/desihub/desiutil.git@${DESIUTIL_VERSION}#egg=desiutil
                python -m pip install -r requirements.txt
                python -m pip install specutils
                python -m pip install -U 'numpy${{ matrix.numpy-version }}'
                python -m pip install -U 'astropy${{ matrix.astropy-version }}'
                python -m pip cache remove fitsio
                python -m pip install --no-deps --force-reinstall --ignore-installed 'fitsio${{ matrix.fitsio-version }}'
            - name: Run the test with coverage
              run: pytest --cov
            - name: Coveralls
              env:
                COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: coveralls

    style:
        name: Style check
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                python-version: ['3.10']

        steps:
            - name: Checkout code
              uses: actions/checkout@v2
              with:
                fetch-depth: 0
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Python dependencies
              run: python -m pip install --upgrade pip setuptools wheel pycodestyle
            - name: Test the style; failures are allowed
              # This is equivalent to an allowed falure.
              continue-on-error: true
              run: pycodestyle --count py/desimeter


# SAVE
